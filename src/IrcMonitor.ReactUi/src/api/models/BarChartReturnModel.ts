/* tslint:disable */
/* eslint-disable */
/**
 * IrcMonitor API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BarCharDataSet } from './BarCharDataSet';
import {
    BarCharDataSetFromJSON,
    BarCharDataSetFromJSONTyped,
    BarCharDataSetToJSON,
} from './BarCharDataSet';

/**
 * 
 * @export
 * @interface BarChartReturnModel
 */
export interface BarChartReturnModel {
    /**
     * 
     * @type {Array<string>}
     * @memberof BarChartReturnModel
     */
    labels: Array<string>;
    /**
     * 
     * @type {Array<number>}
     * @memberof BarChartReturnModel
     */
    identifiers: Array<number>;
    /**
     * 
     * @type {Array<BarCharDataSet>}
     * @memberof BarChartReturnModel
     */
    dataSets: Array<BarCharDataSet>;
}

/**
 * Check if a given object implements the BarChartReturnModel interface.
 */
export function instanceOfBarChartReturnModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "labels" in value;
    isInstance = isInstance && "identifiers" in value;
    isInstance = isInstance && "dataSets" in value;

    return isInstance;
}

export function BarChartReturnModelFromJSON(json: any): BarChartReturnModel {
    return BarChartReturnModelFromJSONTyped(json, false);
}

export function BarChartReturnModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): BarChartReturnModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'labels': json['labels'],
        'identifiers': json['identifiers'],
        'dataSets': ((json['dataSets'] as Array<any>).map(BarCharDataSetFromJSON)),
    };
}

export function BarChartReturnModelToJSON(value?: BarChartReturnModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'labels': value.labels,
        'identifiers': value.identifiers,
        'dataSets': ((value.dataSets as Array<any>).map(BarCharDataSetToJSON)),
    };
}

